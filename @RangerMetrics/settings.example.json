{
  "influxdb": {
    "enabled": true,
    "host": "http://INFLUX_URL:8086",
    "token": "XXXXXXXXXXXXXXXXXXXXXXXXXXXX_AUTH_TOKEN_XXXXXXXXXXXXXXXXXXXXXXXXXXX",
    "org": "ORG_NAME"
  },
  "arma3": {
    "refreshRateMs": 1000,
    "debug": false
  },
  "recordingSettings": {
    "serverPerformance": {
      "name": "serverPerformance",
      "enabled": true,
      "serverOnly": false,
      "intervalMs": 1000,
      "bucket": "server_performance",
      "measurement": "fps",
      "description": "SERVER/HC POLL. Tracks average and minimum FPS. Polled on server (and HC) at specified interval."
    },
    "runningScripts": {
      "name": "runningScripts",
      "enabled": true,
      "serverOnly": false,
      "intervalMs": 1000,
      "bucket": "server_performance",
      "measurement": "running_scripts",
      "description": "SERVER/HC POLL. Tracks the number of scripts running on the server (and HC). Polled on specified interval."
    },
    "entityCount": {
      "name": "entityCount",
      "enabled": true,
      "serverOnly": false,
      "intervalMs": 8000,
      "bucket": "server_performance",
      "measurement": "n/a",
      "description": "SERVER/HC POLL. Tracks the number of entities on the server. Polled on server (and HC) at specified interval as well as on EntityCreated/EntityRespawned/EntityKilled events. Measurement is static, [entities_local, entities_remote, entities_global]."
    },
    "playerPerformance": {
      "name": "playerPerformance",
      "enabled": true,
      "serverOnly": true,
      "intervalMs": 3000,
      "bucket": "player_performance",
      "measurement": "network",
      "description": "SERVER POLL. User network performance. Tracks average ping, average bandwidth, and desync. Polled by the server at specified interval. Not tracked from headless client."
    },
    "serverTime": {
      "name": "serverTime",
      "enabled": true,
      "serverOnly": true,
      "intervalMs": 10000,
      "bucket": "mission_data",
      "measurement": "server_time",
      "description": "SERVER POLL. Tracks the server time. Always server-only. Runs at specified interval."
    },
    "weather": {
      "name": "weather",
      "enabled": true,
      "serverOnly": true,
      "intervalMs": 300000,
      "bucket": "mission_data",
      "measurement": "weather",
      "description": "SERVER POLL. Tracks the weather on the server. Always server-only. Runs at specified interval."
    },
    "viewDistance": {
      "name": "viewDistance",
      "enabled": true,
      "serverOnly": true,
      "intervalMs": 300000,
      "bucket": "mission_data",
      "measurement": "view_distance",
      "description": "SERVER POSTINIT, MPEnded. Tracks the view distance on the server. Always server-only. Runs at specified interval."
    },
    "runningMission": {
      "name": "runningMission",
      "enabled": true,
      "serverOnly": true,
      "intervalMs": 0,
      "bucket": "mission_data",
      "measurement": "running_mission",
      "description": "SERVER POSTINIT, MPEnded. Tracks the name of the mission running on the server. Always server-only. Runs at the start (and tries at end) of the mission."
    },
    "playerStatus": {
      "name": "playerStatus",
      "enabled": true,
      "serverOnly": true,
      "intervalMs": 0,
      "bucket": "player_data",
      "measurement": "client_state",
      "description": "EH. Tracks players' clientstateNumber, adminState, and profileName on connect/disconnect to server and to mission, as well as when these values change."
    },
    "playerIdentity": {
      "name": "playerIdentity",
      "enabled": true,
      "serverOnly": true,
      "intervalMs": 0,
      "bucket": "player_data",
      "measurement": "player_identity",
      "description": "EH. Tracks players' identity on connect/disconnect to server and to mission, as well as when these values change."
    },
    "CBAEventHandlers": {
      "milsimServerEfficiency": {
        "name": "milsimServerEfficiency",
        "enabled": true,
        "serverOnly": true,
        "bucket": "server_performance",
        "measurement": "milsim_server_efficiency",
        "description": "EVENTHANDLER. Tracks the efficiency of the server."
      }
    }
  }
}