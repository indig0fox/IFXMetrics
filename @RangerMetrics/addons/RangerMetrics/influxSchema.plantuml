classDiagram
   class server_state {
      BUCKET
   }

   class server_events {
    Measurement OnUserConnected
    Measurement OnUserDisconnected
    Measurement PlayerConnected
    Measurement PlayerDisconnected
    Measurement OnUserClientStateChanged
    Measurement OnUserAdminStateChanged
    Measurement OnUserKicked
    Meausrement HandleChatMessage
    Measurement MPEnded
    Measurement EntityCreated
    Measurement EntityKilled
    Measurement GroupCreated
    Measurement GroupDeleted
    Measurement MarkerCreated
    Measurement MarkerDeleted
    Measurement MarkerUpdated
    Measurement Service
   }

   server_state --> running_mission
   class running_mission {
        capture: ServerPoll, 60s
        capture: MissionEH, MPEnded
        tag string profileName
        tag string connectedServer
        field string onLoadName
        field string missionName
        field string missionNameSource
        field string briefingName
   }

   server_state --> view_distance
   class view_distance {
        capture: ServerPoll, 60s
        tag string profileName
        tag string connectedServer
        field string viewDistance
        field string objectViewDistance
   }

   server_state --> server_time
   class server_time {
        capture: ServerPoll, 3s
        tag string profileName
        tag string connectedServer
        field float diag_tickTime
        field int serverTime
        field float timeMultiplier
        field int accTime
   }

   server_state --> running_scripts
   class running_scripts {
        capture: ServerPoll, 3s
        tag string profileName
        tag string connectedServer
        field int spawn_total
        field int execVM_total
        field int exec_total
        field int execFSM_total
        field int pfh_total
   }

   server_state --> entities_local
   class entities_local {
        capture: ServerPoll, 30s
        capture: MissionEH, EntityKilled
        capture: MissionEH, EntityCreated
        capture: MissionEH, GroupCreated
        capture: MissionEH, GroupDeleted
        tag string profileName
        tag string connectedServer
        field int units_alive
        field int units_dead
        field int vehicles_total
        field int groups_total
   }
   server_state --> entities_global
   class entities_global {
        capture: ServerPoll, 30s
        capture: MissionEH, EntityKilled
        capture: MissionEH, EntityCreated
        capture: MissionEH, GroupCreated
        capture: MissionEH, GroupDeleted
        tag string profileName
        tag string connectedServer
        field int units_alive
        field int units_dead
        field int vehicles_total
        field int groups_total
   }
   server_state --> entities_remote
   class entities_remote {
        capture: ServerPoll, 30s
        capture: MissionEH, EntityKilled
        capture: MissionEH, EntityCreated
        capture: MissionEH, GroupCreated
        capture: MissionEH, GroupDeleted
        tag string profileName
        tag string connectedServer
        field int units_alive
        field int units_dead
        field int vehicles_total
        field int groups_total
   }

   server_state --> server_performance
   class server_performance {
        capture: ServerPoll, 1s
        tag string profileName
        tag string connectedServer
        field string fps_avg
        field string fps_min

   }

   server_state --> weather
   class weather {
        capture: ServerPoll, 60s
        tag string profileName
        tag string connectedServer
        field string fog
        field string overcast
        field string rain
        field string humidity
        field string waves
        field string windDir
        field string windStr
        field string gusts
        field string lightnings
        field string moonIntensity
        field string moonPhase
        field string sunOrMoon
   }

   class config_state {
      tag string profileName
      tag string connectedServer
      Measurement mission_config_file
      Measurement addon_options
      Measurement mission_parameters
   }

   config_state --> mission_config_file
   class mission_config_file {
      tag string profileName
      tag string connectedServer
      tag string category [
         mission_info
         respawn
         player_ui
         corpse_and_wreck
         mission_settings
      ]
      
   }
%%   '  link fields in each category
    mission_config_file --> mission_info
    class mission_info {
        tag string profileName
        tag string connectedServer
        field string author
        field string onLoadName
        field string onLoadMission
        field string loadScreen
        %%   field string header
        field string gameType
        field int minPlayers
        field int maxPlayers
        field int onLoadIntro
        field int onLoadMissionTime
        field int onLoadIntroTime
        field string briefingName
        field string overviewPicture
        field string overviewText
        field string overviewTextLocked
    }

    mission_config_file --> respawn
    class respawn {
            tag string profileName
      tag string connectedServer
      field string respawn
      field string respawnButton
      field string respawnDelay
      field string respawnVehicleDelay
      field string respawnDialog
      field string respawnOnStart
      field string respawnTemplates
      field string respawnTemplatesWest
      field string respawnTemplatesEast
      field string respawnTemplatesGuer
      field string respawnTemplatesCiv
      field string respawnWeapons
      field string respawnMagazines
      field int reviveMode
      field int reviveUnconsciousStateMode
      field int reviveRequiredTrait
      field int reviveRequiredItems
      field int reviveRequiredItemsFakConsumed
      field int reviveMedicSpeedMultiplier
      field int reviveDelay
      field int reviveForceRespawnDelay
      field int reviveBleedOutDelay
      field int enablePlayerAddRespawn
    }

    mission_config_file --> player_ui
    class player_ui {
            tag string profileName
      tag string connectedServer
      field int overrideFeedback
      field int showHUD
      field int showCompass
      field int showGPS
      field int showGroupIndicator
      field int showMap
      field int showNotePad
      field int showPad
      field int showWatch
      field int showUAVFeed
      field int showSquadRadar
    }

    mission_config_file --> corpse_and_wreck
    class corpse_and_wreck {
            tag string profileName
      tag string connectedServer
      field int corpseManagerMode
      field int corpseLimit
      field int corpseRemovalMinTime
      field int corpseRemovalMaxTime
      field int wreckManagerMode
      field int wreckLimit
      field int wreckRemovalMinTime
      field int wreckRemovalMaxTime
      field int minPlayerDistance
    }

    mission_config_file --> mission_settings
    class mission_settings {
            tag string profileName
      tag string connectedServer
      field int aiKills
      field int briefing
      field int debriefing
      field string disableChannels
      field int disabledAI
      field string disableRandomization
      field List~string~ enableDebugConsole
      field int enableItemsDropping
      field int enableTeamSwitch
      field int forceRotorLibSimulation
      field int joinUnassigned
      field int minScore
      field int avgScore
      field int maxScore
      field string onCheat
      field string onPauseScript
      field int saving
      field int scriptedPlayer
      field int skipLobby
      field int HostDoesNotSkipLobby
      field string missionGroup
    }

   class player_state


    player_state --> player_identity
    class player_identity {
        capture: MissionEH, OnUserConnected
        capture: MissionEH, OnUserDisconnected
        capture: MissionEH, PlayerConnected
        capture: MissionEH, PlayerDisconnected
        capture: MissionEH, OnUserKicked
        tag string connectedServer
        tag string playerUID
        field string playerID
        field string ownerId
        field string playerUID
        field string profileName
        field string displayName
        field string steamName
        field bool isHC
        field bool isJip
        field string roleDescription
    }

    player_state --> player_status
    class player_status {
        capture: MissionEH, OnUserConnected
        capture: MissionEH, OnUserDisconnected
        capture: MissionEH, PlayerConnected
        capture: MissionEH, PlayerDisconnected
        capture: MissionEH, OnUserClientStateChanged
        capture: MissionEH, OnUserAdminStateChanged
        capture: MissionEH, OnUserKicked
        tag string connectedServer
        tag string playerUID
        field int clientStateNumber
        field int adminState
    }

    player_state --> player_performance
    class player_performance {
        capture: ServerPoll
        tag string connectedServer
        tag string playerUID
        field float avgPing
        field float avgBandwidth
        field float desync
    }

    player_state --> unit_inventory
    class unit_inventory {
        capture: InventoryClosedEH
        tag string connectedServer
        tag string playerUID
        field string currentWeapon
        field string uniform
        field string vest
        field string backpack
		field string headgear
		field string goggles
		field string hmd
		field string primaryWeapon
		field string primaryWeaponMagazine
		field string secondaryWeapon
		field string secondaryWeaponMagazine
		field string handgunWeapon
		field string handgunMagazine
    }

    player_state --> unit_state
    class unit_state {
        capture: UnitEH, GetInMan
        capture: UnitEH, GetOutMan
        tag string connectedServer
        tag string playerUID
        field float health
        field bool is_unconscious
        field bool is_cardiac_arrest
        field bool is_captive
        field bool in_vehicle
        field string vehicle_role
        field float speed_kmh
        field string unitTraitX
        field bool unitTraitY
        field int unitTraitZ
    }

class player_events

player_events --> Dammaged
    class Dammaged {
        capture: UnitEH, Dammaged
        tag string connectedServer
        tag string playerUID
        field string selection
        field string damage
        field string hitIndex
        field string hitPoint
        field string shooter
        field string projectile
    }

    player_events --> FiredMan
    class FiredMan {
        capture: UnitEH, FiredMan
        tag string connectedServer
        tag string playerUID
        field string weapon
        field string muzzle
        field string mode
        field string ammo
        field string magazine
        field string vehicle
        field string vehicleClass
    }

    player_events --> GetInMan
    class GetInMan {
        capture: UnitEH, GetInMan
        tag string connectedServer
        tag string playerUID
        field string role
        field string vehicle
        field string turret
    }
    player_events --> GetOutMan
    class GetOutMan {
        capture: UnitEH, GetOutMan
        tag string connectedServer
        tag string playerUID
        field string role
        field string vehicle
        field string turret
    }

    player_events --> HandleScore
    class HandleScore {
        capture: UnitEH, HandleScore
        tag string connectedServer
        tag string playerUID
        field int score
        field string object
        field string objectclass
    }

    player_events --> InventoryClosed
    class InventoryClosed {
        capture: UnitEH, InventoryClosed
        tag string connectedServer
        tag string playerUID
        field string currentWeaponClass
        field string uniformClass
        field string vestClass
        field string backpackClass
        field string headgearClass
        field string gogglesClass
        field string hmdClass
        field string primaryWeaponClass
        field string primaryWeaponMagazineClass
        field string secondaryWeaponClass
        field string secondaryWeaponMagazineClass
        field string handgunWeaponClass
        field string handgunMagazineClass
    }